// Code generated by mockery v1.0.0. DO NOT EDIT.

package automock

import mock "github.com/stretchr/testify/mock"
import redis "github.com/go-redis/redis/v7"
import time "time"

// RedisClient is an autogenerated mock type for the RedisClient type
type RedisClient struct {
	mock.Mock
}

// Get provides a mock function with given fields: key
func (_m *RedisClient) Get(key string) *redis.StringCmd {
	ret := _m.Called(key)

	var r0 *redis.StringCmd
	if rf, ok := ret.Get(0).(func(string) *redis.StringCmd); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.StringCmd)
		}
	}

	return r0
}

// Set provides a mock function with given fields: key, value, expiration
func (_m *RedisClient) Set(key string, value interface{}, expiration time.Duration) *redis.StatusCmd {
	ret := _m.Called(key, value, expiration)

	var r0 *redis.StatusCmd
	if rf, ok := ret.Get(0).(func(string, interface{}, time.Duration) *redis.StatusCmd); ok {
		r0 = rf(key, value, expiration)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.StatusCmd)
		}
	}

	return r0
}

// SetNX provides a mock function with given fields: key, value, expiration
func (_m *RedisClient) SetNX(key string, value interface{}, expiration time.Duration) *redis.BoolCmd {
	ret := _m.Called(key, value, expiration)

	var r0 *redis.BoolCmd
	if rf, ok := ret.Get(0).(func(string, interface{}, time.Duration) *redis.BoolCmd); ok {
		r0 = rf(key, value, expiration)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*redis.BoolCmd)
		}
	}

	return r0
}
